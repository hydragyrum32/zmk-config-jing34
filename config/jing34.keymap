// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro
//#define HRML(k1,k2,k3,k4) &ht LGUI k1  &ht LALT k2  &ht LCTRL k3 &ht LSHFT
//#define HRMR(k1,k2,k3,k4) &ht LSHFT k1 &ht RCTRL k2 &ht LALT k3  &ht RGUI k4  

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        mt: mod_tap {
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <220>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        combos {
            compatible = "zmk,combos";

            combo_tab {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&kp TAB>;
                layers = <0>;
            };

            combo_bspc {
                timeout-ms = <50>;
                key-positions = <13 12>;
                bindings = <&kp BSPC>;
                layers = <0>;
            };

            combo_bspcw {
                timeout-ms = <50>;
                key-positions = <17 16>;
                bindings = <&kp LC(BSPC)>;
                layers = <0>;
            };

            combo_cw {
                timeout-ms = <50>;
                key-positions = <20 11>;
                bindings = <&caps_word>;
                layers = <0>;
            };

            combo_esc {
                timeout-ms = <50>;
                key-positions = <10 1>;
                bindings = <&kp ESC>;
                layers = <0>;
            };

            combo_reset {
                timeout-ms = <50>;
                key-positions = <0 9>;
                layers = <0>;
                bindings = <&sys_reset>;
            };

            combo_boot {
                timeout-ms = <50>;
                key-positions = <20 29>;
                layers = <0>;
                bindings = <&bootloader>;
            };
        };
    };

    macros {
        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W       &kp E        &kp R          &kp T        &kp Y  &kp U        &kp I        &kp O       &kp P
&ht LGUI A  &ht LALT S  &ht LCTRL D  &ht LSHFT F    &kp G        &kp H  &ht RSHFT J  &ht RCTRL K  &ht LALT L  &ht RGUI SEMI
&kp Z       &kp X       &kp C        &kp V          &kp B        &kp N  &kp M        &kp COMMA    &kp DOT     &kp FSLH
                                     &kp BACKSPACE  &lt 1 SPACE         &lt 2 ENTER  &lt 3 MINUS
            >;
        };

        num_layer {
            bindings = <
&kp N1    &kp N2    &kp N3     &kp N4     &kp N5  &kp N6          &kp N7          &kp N8        &kp N9     &kp N0
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp APOS
&none     &none     &none      &none      &none   &none           &none           &trans        &trans     &kp GRAVE
                               &trans     &trans                  &trans          &trans
            >;
        };

        fn_layer {
            bindings = <
&kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)
&kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &kp F5      &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &to 4
&none       &none       &none       &none       &none       &none       &none       &none       &none       &none
                                    &trans      &trans                  &trans      &trans
            >;
        };

        nav_layer {
            bindings = <
&kp F1    &kp F2    &kp F3      &kp F4        &kp F5        &kp F6   &kp F7             &kp F8           &kp F9     &kp F10
&kp LGUI  &kp LALT  &kp LCTRL   &kp LSHFT     &kp F11       &kp F12  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp RIGHT  &kp PG_DN
&none     &none     &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none    &none              &none            &none      &none
                                &trans        &trans                 &trans             &trans
            >;
        };

        gaming {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E   &kp R     &kp T  &kp Y      &kp U   &kp I      &to 0
&kp LSHFT  &kp A  &kp S  &kp D   &kp F     &kp G  &kp H      &kp J   &kp K      &kp L
&kp LCTRL  &kp Z  &kp X  &kp C   &kp V     &kp B  &kp N      &kp M   &kp COMMA  &kp ESC
                         &kp N5  &kp LALT         &kp SPACE  &kp N4
            >;
        };
    };
};
